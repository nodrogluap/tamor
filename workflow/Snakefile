#!/usr/bin/env -S snakemake --use-conda --quiet --snakefile

import os.path
import csv
from pathlib import Path
import glob

from scripts.tamor_utils import decomment

# Site-specific config, most changes would be made in that file rather than this one.
configfile: "config/config.yaml"

# Automated reports of results as a single HTML page
report: "report/workflow.rst"

# Roughly in order of rule execution
include: "rules/resources.smk"
include: "rules/metadata.smk"
include: "rules/fastq_list.smk"
include: "rules/bcl_conversion.smk"
include: "rules/bams.smk"
include: "rules/rna.smk"
include: "rules/dna.smk"
include: "rules/pcgr.smk"
include: "rules/djerba.smk"

rule all:
	# Download reference data if not found on the system.
	# Generate a Dragen somatic mutation analysis for each pair for tumor-normal listed in the DNA pairs file.
	# Generate RNA quantification for samples listed in the RNA samples file.
	# Also generate a PCGR user-friendly variant report, which will require the germline variant calls as well in another rule.
	input:
		config["ref_fasta"],
		expand(config["output_dir"]+"/{project_name}/{subject}/rna/{sample_combo}.rna.quant.genes.hugo.tpm.txt", zip, project_name=get_rna_projects(), subject=get_rna_subjects(), sample_combo=get_rna_sample_keys()),
		expand(config["output_dir"]+"/{project_name}/{subject}/rna/{sample_combo}.rna.quant.genes.fpkm.txt", zip, project_name=get_rna_projects(), subject=get_rna_subjects(), sample_combo=get_rna_sample_keys()),
		expand(config["output_dir"]+"/{project_name}/{subject}/rna/{sample_combo}.rna.fusion_candidates.features.csv", zip, project_name=get_rna_projects(), subject=get_rna_subjects(), sample_combo=get_rna_sample_keys()),
		expand(config["output_dir"]+"/{project_name}/{subject}/{sample_combo}.dna.somatic.hard-filtered.vcf.gz", zip, project_name=get_dna_projects(), subject=get_dna_subjects(), sample_combo=get_dna_sample_keys()),
		expand(config["output_dir"]+"/{project_name}/{subject}/{sample_combo}.dna.somatic.cnv.vcf.gz", zip, project_name=get_dna_projects(), subject=get_dna_subjects(), sample_combo=get_dna_sample_keys()),
		expand(config["output_dir"]+"/{project_name}/{subject}/{sample_combo}.dna.somatic.sv.vcf.gz", zip, project_name=get_dna_projects(), subject=get_dna_subjects(), sample_combo=get_dna_sample_keys()),
		#expand(config["output_dir"]+"/{project_name}/{subject}/{sample_combo}.dna.germline_hla.hla.tsv", zip, project_name=get_dna_projects(), subject=get_dna_subjects(), sample_combo=get_dna_sample_keys()),
		expand(config["output_dir"]+"/{project_name}/{subject}/{sample_combo}.dna.somatic.sv.fusion_candidates.features.csv", zip, project_name=get_dna_projects(), subject=get_dna_subjects(), sample_combo=get_dna_sample_keys()),
		expand(config["output_dir"]+"/pcgr/{project_name}/{sample_combo}/{subject}.pcgr.grch38.html", zip, project_name=get_dna_projects(), subject=get_dna_subjects(), sample_combo=get_dna_sample_keys()),
		expand(config["output_dir"]+"/djerba/{project_name}/{sample_combo}/{subject}-v1_report.research.html", zip, project_name=get_dna_projects(), subject=get_dna_subjects(), sample_combo=get_dna_sample_keys())
